package leetCode;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class CombinationSum40 {

	public List<List<Integer>> combinationSum2(int[] candidates, int target) {
		List<List<Integer>> resultList = new ArrayList<List<Integer>>();
		Arrays.sort(candidates);

		combinationSum2Util(candidates, target, resultList, 0, new ArrayList<Integer>());

		return resultList;

	}

	public void combinationSum2Util(int[] candidates, int target, List<List<Integer>> resultList, int index,
			ArrayList<Integer> current) {
		if (0 == target) {
			resultList.add(new ArrayList<>(current));
			return;
		}

		if (target < 0)
			return;

		for (int i = index; i < candidates.length; i++) {
			if (i == index || candidates[i] != candidates[i - 1]) {
				current.add(candidates[i]);
				combinationSum2Util(candidates, target - candidates[i], resultList, i + 1, current);
				current.remove(current.size() - 1);

			}

		}

	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
